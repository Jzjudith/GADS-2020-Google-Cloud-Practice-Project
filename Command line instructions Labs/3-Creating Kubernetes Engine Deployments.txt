Creating Kubernetes Engine Deployments

//Set project ID

gcloud config set project [project ID]

//set the environment variable for the zone and cluster name
export my_zone=us-central1-a
export my_cluster=standard-cluster-1

//Configure kubectl tab completion in Cloud Shell
source <(kubectl completion bash)

//Create a Kubernetes cluster
gcloud container clusters create $my_cluster --num-nodes 3  --enable-ip-alias --zone $my_zone

//Configure access to the cluster for the kubectl command-line tool
gcloud container clusters get-credentials $my_cluster --zone $my_zone

//Clone the repository to the Cloud Shell
git clone https://github.com/GoogleCloudPlatformTraining/training-data-analyst

//Change to the directory that contains the sample files
cd ~/training-data-analyst/courses/ak8s/06_Deployments/

//Create a deployment manifest
kubectl apply -f ./nginx-deployment.yaml


//Scale Pods down to one
kubectl scale --replicas=1 deployment nginx-deployment
kubectl get deployments

//Scale the Pod back up to three replicas
kubectl scale --replicas=3 deployment nginx-deployment
kubectl get deployments

//Trigger a deployment rollout

kubectl set image deployment.v1.apps/nginx-deployment nginx=nginx:1.9.1 --record

kubectl rollout status deployment.v1.apps/nginx-deployment

kubectl get deployments

kubectl rollout history deployment nginx-deployment

//Trigger a deployment rollback

kubectl rollout undo deployments nginx-deployment
kubectl rollout history deployment nginx-deployment

kubectl rollout history deployment/nginx-deployment --revision=3


kubectl apply -f ./service-nginx.yaml

//Verify the LoadBalancer creation

kubectl get service nginx

//Perform a canary deployment
kubectl apply -f nginx-canary.yaml
kubectl get deployments

//Scale down the primary deployment to 0 replicas.
kubectl scale --replicas=0 deployment nginx-deployment

//verify that the only running replica is now the canary deployment 

kubectl get deployments

//END

